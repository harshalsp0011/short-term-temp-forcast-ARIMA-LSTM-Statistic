knitr::opts_chunk$set(echo = TRUE)
library(ISLR2)
library(ggplot2)
library(MASS)
library(car)
library(class)
set.seed(100)
used_devices= read.csv("used_device_data.csv", header=TRUE, sep=",")
used_devices$device_brand=as.factor(used_devices$device_brand)
used_devices$os=as.factor(used_devices$os)
used_devices$X4g=as.factor(used_devices$X4g)
used_devices$X5g=as.factor(used_devices$X5g)
testRows = sample(nrow(used_devices),0.2*nrow(used_devices))
testData = used_devices[testRows, ]
trainData = used_devices[-testRows, ]
row.names(trainData) <- NULL
head(trainData)
knitr::opts_chunk$set(echo = TRUE)
library(ISLR2)
library(ggplot2)
library(MASS)
library(car)
library(class)
set.seed(100)
used_devices= read.csv("used_device_data.csv", header=TRUE, sep=",")
used_devices$device_brand=as.factor(used_devices$device_brand)
used_devices$os=as.factor(used_devices$os)
used_devices$X4g=as.factor(used_devices$X4g)
used_devices$X5g=as.factor(used_devices$X5g)
testRows = sample(nrow(used_devices),0.2*nrow(used_devices))
testData = used_devices[testRows, ]
trainData = used_devices[-testRows, ]
row.names(trainData) <- NULL
head(trainData)
set.seed(100)
# Boxplot of normalized_used_price by os
ggplot(trainData, aes(x = os, y = normalized_used_price)) +
geom_boxplot(fill = "lightblue", color = "darkblue") +
theme_minimal() +
labs(
title = "Boxplot of Normalized Used Price by OS",
x = "Operating System",
y = "Normalized Used Price"
)
knitr::opts_chunk$set(echo = TRUE)
library(ISLR2)
library(ggplot2)
library(MASS)
library(car)
library(class)
set.seed(100)
used_devices= read.csv("used_device_data.csv", header=TRUE, sep=",")
used_devices$device_brand=as.factor(used_devices$device_brand)
used_devices$os=as.factor(used_devices$os)
used_devices$X4g=as.factor(used_devices$X4g)
used_devices$X5g=as.factor(used_devices$X5g)
testRows = sample(nrow(used_devices),0.2*nrow(used_devices))
testData = used_devices[testRows, ]
trainData = used_devices[-testRows, ]
row.names(trainData) <- NULL
head(trainData)
set.seed(100)
# Boxplot of normalized_used_price by os
ggplot(trainData, aes(x = os, y = normalized_used_price)) +
geom_boxplot(fill = "lightblue", color = "darkblue") +
theme_minimal() +
labs(
title = "Boxplot of Normalized Used Price by OS",
x = "Operating System",
y = "Normalized Used Price"
)
set.seed(100)
# Select continuous variables: battery, front_camera_mp, weight
continuous_vars <- trainData[, c("battery", "front_camera_mp", "weight")]
# Scatterplot matrix
pairs(continuous_vars, main = "Scatterplot Matrix of Battery, Front Camera MP, and Weight")
# Correlation table
correlation_matrix <- cor(continuous_vars)
print(correlation_matrix)
knitr::opts_chunk$set(echo = TRUE)
library(ISLR2)
library(ggplot2)
library(MASS)
library(car)
library(class)
set.seed(100)
used_devices= read.csv("used_device_data.csv", header=TRUE, sep=",")
used_devices$device_brand=as.factor(used_devices$device_brand)
used_devices$os=as.factor(used_devices$os)
used_devices$X4g=as.factor(used_devices$X4g)
used_devices$X5g=as.factor(used_devices$X5g)
testRows = sample(nrow(used_devices),0.2*nrow(used_devices))
testData = used_devices[testRows, ]
trainData = used_devices[-testRows, ]
row.names(trainData) <- NULL
head(trainData)
set.seed(100)
# Boxplot of normalized_used_price by os
ggplot(trainData, aes(x = os, y = normalized_used_price)) +
geom_boxplot(fill = "lightblue", color = "darkblue") +
theme_minimal() +
labs(
title = "Boxplot of Normalized Used Price by OS",
x = "Operating System",
y = "Normalized Used Price"
)
set.seed(100)
# Select continuous variables: battery, front_camera_mp, weight
continuous_vars <- trainData[, c("battery", "front_camera_mp", "weight")]
# Scatterplot matrix
pairs(continuous_vars, main = "Scatterplot Matrix of Battery, Front Camera MP, and Weight")
# Correlation table
correlation_matrix <- cor(continuous_vars)
print(correlation_matrix)
set.seed(100)
model1 <- lm(normalized_used_price ~ ., data = trainData)
summary(model1)
knitr::opts_chunk$set(echo = TRUE)
library(ISLR2)
library(ggplot2)
library(MASS)
library(car)
library(class)
set.seed(100)
used_devices= read.csv("used_device_data.csv", header=TRUE, sep=",")
used_devices$device_brand=as.factor(used_devices$device_brand)
used_devices$os=as.factor(used_devices$os)
used_devices$X4g=as.factor(used_devices$X4g)
used_devices$X5g=as.factor(used_devices$X5g)
testRows = sample(nrow(used_devices),0.2*nrow(used_devices))
testData = used_devices[testRows, ]
trainData = used_devices[-testRows, ]
row.names(trainData) <- NULL
head(trainData)
set.seed(100)
# Boxplot of normalized_used_price by os
ggplot(trainData, aes(x = os, y = normalized_used_price)) +
geom_boxplot(fill = "lightblue", color = "darkblue") +
theme_minimal() +
labs(
title = "Boxplot of Normalized Used Price by OS",
x = "Operating System",
y = "Normalized Used Price"
)
set.seed(100)
# Select continuous variables: battery, front_camera_mp, weight
continuous_vars <- trainData[, c("battery", "front_camera_mp", "weight")]
# Scatterplot matrix
pairs(continuous_vars, main = "Scatterplot Matrix of Battery, Front Camera MP, and Weight")
# Correlation table
correlation_matrix <- cor(continuous_vars)
print(correlation_matrix)
set.seed(100)
model1 <- lm(normalized_used_price ~ ., data = trainData)
summary(model1)
set.seed(100)
vif(model1)
knitr::opts_chunk$set(echo = TRUE)
library(ISLR2)
library(ggplot2)
library(MASS)
library(car)
library(class)
set.seed(100)
used_devices= read.csv("used_device_data.csv", header=TRUE, sep=",")
used_devices$device_brand=as.factor(used_devices$device_brand)
used_devices$os=as.factor(used_devices$os)
used_devices$X4g=as.factor(used_devices$X4g)
used_devices$X5g=as.factor(used_devices$X5g)
testRows = sample(nrow(used_devices),0.2*nrow(used_devices))
testData = used_devices[testRows, ]
trainData = used_devices[-testRows, ]
row.names(trainData) <- NULL
head(trainData)
set.seed(100)
# Boxplot of normalized_used_price by os
ggplot(trainData, aes(x = os, y = normalized_used_price)) +
geom_boxplot(fill = "lightblue", color = "darkblue") +
theme_minimal() +
labs(
title = "Boxplot of Normalized Used Price by OS",
x = "Operating System",
y = "Normalized Used Price"
)
set.seed(100)
# Select continuous variables: battery, front_camera_mp, weight
continuous_vars <- trainData[, c("battery", "front_camera_mp", "weight")]
# Scatterplot matrix
pairs(continuous_vars, main = "Scatterplot Matrix of Battery, Front Camera MP, and Weight")
# Correlation table
correlation_matrix <- cor(continuous_vars)
print(correlation_matrix)
set.seed(100)
model1 <- lm(normalized_used_price ~ ., data = trainData)
summary(model1)
set.seed(100)
vif(model1)
set.seed(100)
library(leaps)
model2 <- regsubsets(normalized_used_price ~ ., data = trainData,
nvmax = 47, really.big = TRUE)
model3 <- step(lm(normalized_used_price ~ 1, data = trainData),
scope = formula(model1),
direction = "forward",
trace = FALSE)
model4 <- step(model1,
direction = "backward",
trace = FALSE)
summary(model2)
summary(model3)
summary(model4)
AIC(model4)
BIC(model4)
setwd("~/Library/CloudStorage/OneDrive-UniversityatBuffalo/Stats Project/Code/TS analysis")
